package  {		import flash.events.MouseEvent;	import flash.events.TouchEvent;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;		import flash.events.Event;			import flash.display.MovieClip;	import flash.events.Event;	import com.greensock.TweenLite;	import com.greensock.*;	import com.greensock.easing.*;			public class Mainmenu extends MovieClip {				var mymain:Main				public function Mainmenu(inMain) {			// constructor code			//this.cacheAsBitmap = true			mymain = inMain			showDrawingPreviews()						this.clearbutton.addEventListener(MouseEvent.CLICK,resetAchievements)		}							function resetAchievements(e:Event) {			trace("reset cookie")			mymain.achievementManager.cookie.clear()			this.textfield.text = mymain.achievementManager.getAchievementsList()		}				//make array of drawings, loop though them and display,				private function showDrawingPreviews() {			 			var thumb = new Thumbnail(this,mymain,new Horsedrawing(),0)			thumb.x = 50			thumb.y = 100			addChild(thumb)									var thumb = new Thumbnail(this,mymain,new Cardrawing(),1)			thumb.x = 300			thumb.y = 100			addChild(thumb)												var thumb = new Thumbnail(this,mymain,new Rocketdrawing(),2)			thumb.x = 50			thumb.y = 300			addChild(thumb)												var thumb = new Thumbnail(this,mymain,new Dolphindrawing(),3)			thumb.x = 300			thumb.y = 300			addChild(thumb)																				}				public function show() {						this.textfield.text = mymain.achievementManager.getAchievementsList()						x=-mymain.gameWidth			visible = true			mymain.gameState = "mainmenu"			TweenLite.to(this, 0.5, {x:0, ease:Cubic.easeInOut});					}				public function hide() {			TweenLite.to(this, 0.5, {x:-mymain.gameWidth, ease:Cubic.easeInOut, onComplete:toggleVisibility});						mymain.gameState = "coloring"		}				private function toggleVisibility() {			this.visible = false		}					}	}