package  {		import flash.events.MouseEvent;	import flash.events.TouchEvent;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.Event;	import com.greensock.TweenLite;	import com.greensock.TweenMax;	import com.greensock.*;	import com.greensock.easing.*;	import flash.display.BitmapData;	import flash.display.Bitmap;	import flash.media.Sound;	import flash.media.SoundChannel	import flash.utils.Timer			import flash.utils.Timer;	import flash.events.TimerEvent;		public class Thumbnail extends MovieClip {				private var mymain:Main		private var mymainmenu:Mainmenu		private var myDrawingNumber:int		private var myDrawingClip:MovieClip				private var padlock:MovieClip		private var buy:MovieClip		private var inAppManager:InappManager		public var openSound:Sound		private var soundDelayTimer:Timer								public function Thumbnail(inmymainmenu:Mainmenu,inmain:Main, drawingClip:MovieClip, drawingNumber:int,drawingicon=null) {						mymain = inmain			mymainmenu = inmymainmenu			myDrawingNumber = drawingNumber			myDrawingClip = drawingClip			//soundDelayTimer = new Timer(500,2)			//soundDelayTimer.addEventListener(TimerEvent.TIMER_COMPLETE,playSound)									//load png icon directly from library			if (drawingicon) {				var png:BitmapData = drawingicon				var bmdata:BitmapData = new BitmapData(png.width,png.height,true,0x00000000)				bmdata.draw(png)								var bm:Bitmap = new Bitmap(bmdata)				this.addChild(bm)			}			if (mymain.payingUser || myDrawingNumber == 0 ) {				addEventListener(TouchEvent.TOUCH_BEGIN,onSelect)			}			else  {								padlock = new Padlock()				padlock.x = 0.5*this.width				padlock.y = 0.5*this.height				addChild(padlock)								mymain.dispatcher.addEventListener(CustomEvent.ON_INAPP_CANCELLED,onCancel)				mymain.dispatcher.addEventListener(CustomEvent.ON_INAPP_BUY,onPaid)				this.addEventListener(MouseEvent.CLICK,onBuy)			}											}						public function openLock() {						//MAKE drawing selectable			addEventListener(TouchEvent.TOUCH_BEGIN,onSelect)			removeEventListener(CustomEvent.ON_INAPP_BUY,onPaid)			removeEventListener(CustomEvent.ON_INAPP_CANCELLED,onCancel)			//REWARDING OPENING ANIM, SHOULD BE SHOWN ONLY ONCE			TweenLite.to(padlock, 2, {y:-500, alpha:0, ease:Cubic.easeInOut, onComplete:onOpenThumb, delay:1});			mymain.alert("All drawings are now available!")		}				//end of unlock anim		private function onOpenThumb() {			padlock.visible = false		}				//user clicked padlock		private function onBuy(e:Event) {			alpha = 0.5						mymain.alert("Starting purchase..please wait")			new InappManager(this.mymain,"purchase")					}				private function onPaid(e:Event) {			trace("thumb: paid event received")			this.removeEventListener(MouseEvent.CLICK,onBuy)			openLock()		}				private function onCancel(e:Event) {			alpha = 1.0			mymain.alert("Purchase cancelled or failed")			this.addEventListener(MouseEvent.CLICK,onBuy)		}				private function onSelect(e:Event) {			mymain.selectDrawing(myDrawingClip,myDrawingNumber);			mymainmenu.hide()			TweenMax.to(this, 0.05, {y:"20", repeat:1, overwrite:true, repeatDelay:0.0, yoyo:true});			//this.soundDelayTimer.start()			openSound.play()		}				private function playSound(e:Event) {			trace("timer")			openSound.play()		}			}	}