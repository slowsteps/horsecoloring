package  {		import flash.events.MouseEvent;	import flash.events.TouchEvent;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.Event;	import com.greensock.TweenLite;	import com.greensock.*;	import com.greensock.easing.*;	import flash.display.BitmapData;	import flash.display.Bitmap;			public class Thumbnail extends MovieClip {				private var mymain:Main		private var mymainmenu:Mainmenu		private var myDrawingNumber:int		private var myDrawingClip:MovieClip		public var cost:int		private var padlock:MovieClip		private var restore:MovieClip		private var buy:MovieClip						public function Thumbnail(inmymainmenu:Mainmenu,inmain:Main, drawingClip:MovieClip, drawingNumber:int,drawingicon=null) {						mymain = inmain			mymainmenu = inmymainmenu			myDrawingNumber = drawingNumber			myDrawingClip = drawingClip			 			//this.addChild(drawingClip)			addEventListener(MouseEvent.RIGHT_CLICK,onSelect)						//load png directly				if (drawingicon) {				var png:BitmapData = drawingicon				var bmdata:BitmapData = new BitmapData(png.width,png.height)				bmdata.draw(png)				var bm:Bitmap = new Bitmap(bmdata)				this.addChild(bm)			}							buy = new BuyButton()			addChild(buy)			buy.x = 60			buy.y = 130			buy.visible = false						restore = new RestoreButton()			addChild(restore)			restore.x = 150			restore.y = 130			restore.visible = true									if (mymain.payingUser) {				mymain.console.log("not showing any padlocks, paying user")			}			else {				mymain.console.log("showing padlock, free user")				padlock = new Padlock()				padlock.x = 100				padlock.y = 80				addChild(padlock)				padlock.addEventListener(MouseEvent.CLICK,onClickPadlock)				restore.addEventListener(MouseEvent.CLICK,this.onRestorePurchase)				buy.addEventListener(MouseEvent.CLICK,onBuy)			}		}								public function checkLock() {						this.creditText.text = "" + cost						var isopen:Boolean = false						//PAYING USER			if(mymain.payingUser) {				mymain.console.log("paying user: hiding padlock, buy and restore button")				padlock.visible = false				buy.visible = false				restore.visible = false				isopen = true				credit.visible = false				creditText.visible = false			}						//ENOUGH STARS TO OPEN			if (!mymain.payingUser && cost<=mymain.achievementManager.getAchievementsList().count) {				mymain.console.log("Padlock " + this.myDrawingNumber + " closed")				padlock.visible = false				buy.visible = false				restore.visible = false				isopen = true				credit.visible = false				creditText.visible = false			}						//FREE USER, NOT ENOUGH STARS			if (!mymain.payingUser && cost>mymain.achievementManager.getAchievementsList().count) {				mymain.console.log("Padlock " + this.myDrawingNumber + " closed")				padlock.visible = true				buy.visible = true				restore.visible = true				isopen = false				restore.removeEventListener(MouseEvent.CLICK,this.onRestorePurchase)				buy.removeEventListener(MouseEvent.CLICK,onBuy)				restore.addEventListener(MouseEvent.CLICK,this.onRestorePurchase)				buy.addEventListener(MouseEvent.CLICK,onBuy)				buy.alpha = 1				restore.alpha = 1			}						if (isopen) openLock()					}				public function openLock() {						mymain.console.log("Padlock " + this.myDrawingNumber + " opening")			//MAKE THUMB CLICKABLE			removeEventListener(MouseEvent.MOUSE_DOWN,onSelect)			removeEventListener(TouchEvent.TOUCH_TAP,onSelect)				addEventListener(MouseEvent.MOUSE_DOWN,onSelect)			addEventListener(TouchEvent.TOUCH_TAP,onSelect)				//OPENING ANIM, SHOULD BE SHOWN ONLY ONCE			TweenLite.to(padlock, 2, {y:-500, alpha:0, ease:Cubic.easeInOut, onComplete:openThumb, delay:1});			padlock.visible = false			buy.visible = false			restore.visible = false		}						private function openThumb() {			padlock.visible = false		}				private function onBuy(e:Event) {			buy.removeEventListener(MouseEvent.CLICK,onBuy)			buy.alpha = 0.5			mymain.console.log("buy button clicked")			new InappManager(this.mymain,"purchase")		}				private function onRestorePurchase(e:Event) {			restore.removeEventListener(MouseEvent.CLICK,this.onRestorePurchase)			restore.alpha=0.5			mymain.console.log("restore clicked")			new InappManager(this.mymain,"restore")					}				private function onSelect(e:Event) {			mymain.selectDrawing(myDrawingClip);			mymainmenu.hide()		}				private function onClickPadlock(e:Event) {						mymain.alert("Earn " + cost + " stars to unlock, or click buy to unlock all the drawings")		}							}	}