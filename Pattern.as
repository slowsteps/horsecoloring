package  {		import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.events.MouseEvent;	import flash.events.Event;	import fl.transitions.Tween; 	import fl.transitions.easing.*;	import flash.events.TouchEvent;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;	import com.greensock.TweenLite;	import com.greensock.*;	import com.greensock.easing.*;			public class Pattern extends MovieClip {						public var mymain: Main;	public var patternNum: int;	public var isBrush:Boolean;	public var origWidth:Number	public var origHeight:Number	public var origScaleX:Number	public var origScaleY:Number	private var stamp:MovieClip				public function Pattern(inmain) {			mymain = inmain		}						public function setPatternNumber(inNum:int) {			patternNum = inNum						//Pattern itself has no visuals, stamp is added here:			stamp = this.addChild(mymain.patterns[patternNum]) as MovieClip						var scalefactor = this.width/stamp.width			stamp.width  *= scalefactor			stamp.height *= scalefactor			origWidth = stamp.width			origHeight = stamp.height			origScaleX = scaleX			origScaleY = scaleY						var hitzone = new Hitzone()			hitzone.width = this.width			hitzone.height = this.height			hitzone.x = this.x - width/2			hitzone.y = this.y - height/2			hitzone.alpha = 0.0			mymain.addChild(hitzone)			hitzone.addEventListener(MouseEvent.ROLL_OVER,onDown)			hitzone.addEventListener(TouchEvent.TOUCH_BEGIN,onDown)						//set stamp to back so that hitzone is in front			mymain.setChildIndex(this,0);											}					private function onDown(e:Event) {						mymain.setPattern(this,patternNum)						if (isBrush) mymain.drawMode = "brush"; 			else mymain.drawMode = "pattern"; 						TweenLite.to(stamp, 0.3, {y:-20, ease:Elastic.easeOut});				//width = 1.5*origWidth			//height = 1.5*origHeight		}				public function releaseFocus() {						TweenLite.to(stamp, 0.2, {y:0});						//width = origWidth			//height = origHeight		}							}	}