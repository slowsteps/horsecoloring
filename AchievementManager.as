package  {				import flash.net.SharedObject;	public class AchievementManager {		private var mymain:Main		private var achievements:Array		private var metrics:Array		public var cookie:SharedObject; 				public function AchievementManager(inmain) {			mymain = inmain			loadData()		}		private function loadData() {			cookie = SharedObject.getLocal("achievementManager");			trace(cookie,cookie.size,cookie.data.achievements)						if (cookie.data.achievements == null) achievements = new Array()			else (achievements = cookie.data.achievements)						if (cookie.data.metrics == null) metrics = new Array()			else (metrics = cookie.data.metrics)						//debug print						for (var key:Object in achievements) trace("achievement:",key,achievements[key])			for (var key:Object in metrics) trace("metric:",key,metrics[key])		}		//deal with generated events		public function track(obj) {						if (obj.type == "colorpaint") {				this.incrementMetric("colorpaints")								this.incrementMetric(obj.colorname)										}									//store metrics			cookie.data.metrics = metrics			//find out if any new achievements have been unlocked			checkForAchievements()					}				//achievement rules		private function checkForAchievements() {			if (metrics["colorpaints"] == 1) saveAchievement("baby painter") 			if (metrics["colorpaints"] == 5) saveAchievement("apprentice painter") 			if (metrics["colorpaints"] == 10) saveAchievement("junior painter") 			if (metrics["colorpaints"] == 20) saveAchievement("medior painter") 		}						//check for new achievements		private function saveAchievement(achievementTitle:String) {						if (achievements[achievementTitle] == null)	{				achievements[achievementTitle] = 1								//store				cookie.data.achievements = achievements				cookie.flush()								displayAchievement(achievementTitle)							}						for (var key:Object in achievements) trace(key,achievements[key])					}				//visual reward		private function displayAchievement(achievementTitle) {			trace(achievementTitle, "unlocked")		}								//utility singleton for metrics		private function incrementMetric(metric) {			if (metric == undefined) trace("Undefined metric")			if (metrics[metric] == null) metrics[metric] = 1			else metrics[metric]++					}			}	}