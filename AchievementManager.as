package  {				import flash.net.SharedObject;	public class AchievementManager {		private var mymain:Main		private var achievements:Array		private var metrics:Array		public var cookie:SharedObject; 				public function AchievementManager(inmain) {			mymain = inmain			loadData()		}		private function loadData() {			cookie = SharedObject.getLocal("achievementManager");			//cookie.clear();			trace(cookie,cookie.size,cookie.data.achievements)						if (cookie.data.achievements == null) achievements = new Array()			else (achievements = cookie.data.achievements)						if (cookie.data.metrics == null) metrics = new Array()			else (metrics = cookie.data.metrics)						//debug print			//for (var key:Object in achievements) trace("achievement:",key,achievements[key])			//for (var key:Object in metrics) trace("metric:",key,metrics[key])		}		//deal with generated events		public function track(obj) {			//trace("tracking",obj.type)			//color painted			if (obj.type == "colorpaint") {				this.incrementMetric("colorpaints")								this.incrementMetric(obj.colorname)										}			//pattern painted			if (obj.type == "patternpaint") {				this.incrementMetric("patternpaints")								this.incrementMetric(obj.patternname)										}			//colors of the objects (e.g. sky)			if (obj.type == "objectcolors") {				checkForColorCombi(obj)			}			//something with time and date									//store metrics			cookie.data.metrics = metrics			//find out if any new achievements have been unlocked			checkForAchievements()					}				private function checkForColorCombi(obj) {			//available objects: sky, ground,tail,manes,tuft,body			//simple			if (obj.colors.sky == "blue") saveAchievement("mr blue sky") 			if (obj.colors.sky == "black") saveAchievement("horse at night") 			if (obj.colors.sky == "red") saveAchievement("red sky") 			//combi of two			var c = obj.colors			if (c.sky == "black" && c.ground == "white") saveAchievement("polar night") 			if (c.body == "black" && c.tail == "black" && c.tuft == "black" && c.manes == "black" && c.backleg == "black") saveAchievement("the goth") 					}						//achievement rules		private function checkForAchievements() {			//total colors painted			if (metrics["colorpaints"] == 1) saveAchievement("baby painter") 			if (metrics["colorpaints"] == 5) saveAchievement("apprentice painter") 			if (metrics["colorpaints"] == 10) saveAchievement("junior painter") 			if (metrics["colorpaints"] == 20) saveAchievement("medior painter") 			//individual colors painted			if (metrics["red"] == 1) saveAchievement("red discovered") 			if (metrics["blue"] == 1) saveAchievement("blue discovered") 			if (metrics["pink"] == 1) saveAchievement("pink discovered") 			//stamps placed			if (metrics["flower"] == 10) saveAchievement("10 flowers") 			if (metrics["heart"] == 10) saveAchievement("10 hearts") 			if (metrics["star"] == 10) saveAchievement("10 stars") 			if (metrics["paws"] == 10) saveAchievement("1o paws") 			if (metrics["butterfly"] == 10) saveAchievement("10 butterflies") 						//combination of colors used			//	polar horse, polar horse at night				//-> create array of hitzone points, create mapping off hex colors to colornames				//-> check after every colorpaint: if horsecolor == black and skycolor==blue..			//date and time		}						//check for new achievements		private function saveAchievement(achievementTitle:String) {						if (achievements[achievementTitle] == null)	{				achievements[achievementTitle] = 1								//store				cookie.data.achievements = achievements				cookie.flush()								displayAchievement(achievementTitle)							}						//for (var key:Object in achievements) trace(key,achievements[key])					}				//visual reward		private function displayAchievement(achievementTitle) {			trace(achievementTitle, "unlocked")		}								//utility singleton for metrics		private function incrementMetric(metric) {			if (metric == undefined) trace("Undefined metric")			if (metrics[metric] == null) metrics[metric] = 1			else metrics[metric]++					}			}	}